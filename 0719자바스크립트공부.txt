모든 함수는 객체이고

함수는 
argumetns  프로퍼티(이떄 arguments는 실제 배열이 아니라 유사배열 객체)
name 프로퍼티
length 프로퍼티 ->> 인자 갯수가 어떻게 돼있는지 알수있음.
caller  프로퍼티<-- 누가 불렀는지
prototype프로퍼티 -> 함수이름의 객체가 생성자로 만들어질떄 생성자의 부모객체를 가르킴.
_proto_   ->함수이름의  객체이름.prototype을 가르킴.


또 객체이름.prototype에는  constructor tostring bind 를 가지고있고 중요한 apply(thisArg,argArray)메서드와
								call(thisArg,[,arg1[,arg2,])메서드를 가지고있다.



즉시 실행 함수 
최초 한번만 실행할수있고 더이상 실행할수 없음 .초기화 코드부분에 사용할수있음.
jqeury등에서도 자주 사용함.제이쿼리에서 자주사용하는 이유는함수 유효범위떄문이다. 
함수내부에서 var등으로 선언하지않으면 변수는 전역변수개념


함수 내부의 함수는 외부에서 부르는것이 불가능하다 그리고 함수안의 함수는 스코프체인으로인해
자기를 감싸고있는함수의 값을 참조할수있다 왜? 스코프체인이 연결돼있어서.

그리고 외부에서 함수안에있는 함수를 참조할려면 내부함수의 함수를 리턴하면 함수밖에서도 내부함수를 호출
하는것이 가능해진다.



parrent{
var a=100
var child=function(){
console.log(a);
}
return child;
}
var inner=parrent();
inner(); <--이러면 100이 찍힌다
이와같이 실행이 끝난 parent()와 같은 부모함수스코프의 변수를
    참조하는 inner()와같은 함수를 클로저라고한다.



유사배열의 장점은 매개변수의 개수가 정확하게 정해지지않은 함수를 구현하거나 전달된 인자의
개수에 따라 다른 처리를 해주어햐나느 함수를 개발하는데 유용하게 사용할수있다.



//----------------------
함수 이름없이 몸체만있는 함수를 함수리터럴이라고 한다. 리터럴은 익명함수? 아니다

리터럴함수는 그냥 변수 값 자체를 리터럴이라고 하는것같다.