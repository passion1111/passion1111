생성자 함수
-자바는 클래스는 대문자
메소드명은 소문자가 약속.

1.생성자 함수는 클래스명과 동일하다.
2.생성자함수는 리턴타입이 없다.(void 조차 사용하지 않음)
3.중복 정의 가능(오버로드 가능-중복함수)
4.디폴트 생성자를 가지고 있어여.(단,사용자가 생성자 함수를 재정의하면 디폴트 생성자함수 기능 상실 <--중요)
5.멤버변수의 초기화 담당. 중요한 목적이자 있는 이유.

프로젝트에서 생성자함수가 필요할떄도있고 필요없을떄도있는데
그이유는 값이 별로 변하지 않으면 생성자함수만 있어도 되는데
그런데 값이 많이 바뀐다면  set메소드가 꼭 필요하다.


상속
자바는 단일상속지원 자바 상속의 키워드는 extends다.
자바는 기본적으로 lang.object를 상속받고 
자바의 특징으로는 한개만  상속 받을수가 있다
super는 부모를 지칭하는 인스턴스 
재사용
확장



다른언어도 다중상속을 지원받아도 보통 2개이상의 상속을 받지않는다. 따로 클래스를 만드는편.

형식>class super{//부모 클래스}
}
class sub extends super{//자식클래스
}
자식클래스는 부모로부터 생성자함수는 받을수가 없다.

cf)jana lang pakage는 자동으로 import됨
-


상속할떄 자식클래스에게 오버라이딩할떄 에러가 뜨니 접근지정자를 잘 설정해야한다. 그러므로 
protected를 추천한다.

자손의 생성자 함수가 생성되는순간 부모의 객체에도 생성자 함수가 만들ㅇ져있다. 


this. 자기자신,객체 생성될떄 그 객체의 시작 주소.
	this():생성자함수의 다른이름. ex)this(1,2)

super	:부모클래스의 멤버에 접근할수있는 인스턴스 
	super(): 상속될떄 객체를만드는것의 역할을 하는아이.굳이 Point pt;식으로 만드는것이아니라
		super.display();이렇게 만들고 rect,circle등에 만들어주면 줄 적어주는것이 줄어들수있음.
	super()로 적어주면 super(x,y)로 부모클래스 생성자함수에 맞게 들어감. 
	
오버라이드 
리턴타입이 같아야하고 매개변수,자료형등 시그니쳐가 같아야한다.

cf)overload(중복함수)


to string  
to string은 객체이다.
객체만들고 그 객체에 to string만들어놓으면 sysout(객체)로만 찍어도 변함.


final은 생성자함수 불가능합니다.
math,

default생성자함수 없는애는 Scanner
random 디폴드생성자있음.
//매개변수가 없는애가 디폴트생성자.
String class 

자바 doc생성법. 자바 경로에가면 bin에 javadoc파일이 있음 이걸로 하는거임
