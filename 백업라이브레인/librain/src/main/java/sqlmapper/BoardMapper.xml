<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 인터페이스의 경로를 적어줌 -->
<mapper namespace="lib.employee.board.mapper.BoardMapper">

<!-- PK값을 미리 SQL을 통해 처리해두고 특정한 이름(board_no)으로 결과를 보관하는 방식. -->
	<insert id="insertSelectKey">
		<selectKey keyProperty="board_no" order="BEFORE"
			resultType="long">
			select seq_board.nextval from dual
		</selectKey>
		insert into board (board_no, board_title, board_content, board_writer)
		values (#{board_no},	#{board_title}, #{board_content}, #{board_writer})
	</insert>
	
	<select id="read" resultType="lib.employee.board.model.BoardDTO">
		select * from board where board_no = #{board_no}
	</select>
		
	<select id="readNext" resultType="lib.employee.board.model.BoardDTO">
			select * from board
			where board_no in (
				(
					select max(board_no)
					from board
					where #{board_no} > board_no
				)
			)
	</select>
	
	<select id="readPrev" resultType="lib.employee.board.model.BoardDTO">
			select * from board
			where board_no in (
				(
					select min(board_no)
					from board
					where board_no > #{board_no}
				)
			)
	</select>
	
	<delete id="delete">
		delete from board where board_no = #{board_no}
	</delete>
	
	<!-- updateDate칼럼 : 최종 수정시간 의미. regDate : 최초 등록시간 의미. 따라서 regDate은 바뀌지 않음. -->
	<update id="update" >
		update board
			set board_title =#{board_title},
			board_content = #{board_content},
			board_writer = #{board_writer},
			board_updateDate = sysdate
			where board_no = #{board_no}
	</update>

	<!-- 목록과 데이터개수 처리 -->
	<sql id="criteria">
	<trim prefix="(" suffix=") AND " prefixOverrides="OR">
		<foreach item='type' collection="typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'T'.toString()">
						board_title like '%' || #{keyword} ||'%'
					</when>
					<when test="type == 'C'.toString()">
						board_content like '%'|| #{keyword} ||'%'
					</when>
					<when test="type == 'W'.toString()">
						board_writer like '%' || #{keyword} ||'%'
					</when>
				</choose>
			</trim>
		</foreach>
	</trim>
</sql>

	<select id="getListWithPaging" resultType="lib.employee.board.model.BoardDTO">
		<![CDATA[
			select
				board_no, board_title, board_content, board_writer, board_regdate, board_updatedate
			from
				(
				select /*+INDEX_DESC(board pk_board) */
					rownum rn, board_no, board_title, board_content, board_writer, board_regdate, board_updatedate
				from
					board
				where
		]]>
		
		<include refid="criteria"></include>		
		
		<![CDATA[
			rownum <= #{pageNum} * #{amount}
			)
		where rn > (#{pageNum}-1) * #{amount}
		]]>
	</select>

	<select id="getTotalCount" resultType="int">
		select count(*) from board 
		where 
		<include refid="criteria"></include>
		board_no > 0
	</select>
</mapper>
	
